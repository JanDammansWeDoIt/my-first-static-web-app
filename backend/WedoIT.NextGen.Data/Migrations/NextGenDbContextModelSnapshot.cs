// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WedoIT.NextGen.Data.Context;

#nullable disable

namespace WedoIT.NextGen.Data.Migrations
{
    [DbContext(typeof(NextGenDbContext))]
    partial class NextGenDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WedoIT.NextGen.Data.Entities.Block", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Blocks", (string)null);
                });

            modelBuilder.Entity("WedoIT.NextGen.Data.Entities.History", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BlockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DoneByPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.HasIndex("PersonId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Histories", (string)null);
                });

            modelBuilder.Entity("WedoIT.NextGen.Data.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("WedoIT.NextGen.Data.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasDatabase")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NeedHosting")
                        .HasColumnType("bit");

                    b.Property<string>("RepositoryUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Types")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Projects", (string)null);
                });

            modelBuilder.Entity("WedoIT.NextGen.Data.Entities.ProjectBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BlockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectBlocks");
                });

            modelBuilder.Entity("WedoIT.NextGen.Data.Entities.Block", b =>
                {
                    b.HasOne("WedoIT.NextGen.Data.Entities.Person", "Creator")
                        .WithMany("Blocks")
                        .HasForeignKey("CreatorId")
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("WedoIT.NextGen.Data.Entities.History", b =>
                {
                    b.HasOne("WedoIT.NextGen.Data.Entities.Block", "Block")
                        .WithMany("Histories")
                        .HasForeignKey("BlockId")
                        .IsRequired();

                    b.HasOne("WedoIT.NextGen.Data.Entities.Person", "Person")
                        .WithMany("Histories")
                        .HasForeignKey("PersonId")
                        .IsRequired();

                    b.HasOne("WedoIT.NextGen.Data.Entities.Project", "Project")
                        .WithMany("Histories")
                        .HasForeignKey("ProjectId")
                        .IsRequired();

                    b.Navigation("Block");

                    b.Navigation("Person");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WedoIT.NextGen.Data.Entities.Project", b =>
                {
                    b.HasOne("WedoIT.NextGen.Data.Entities.Person", "Creator")
                        .WithMany("Projects")
                        .HasForeignKey("CreatorId")
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("WedoIT.NextGen.Data.Entities.ProjectBlock", b =>
                {
                    b.HasOne("WedoIT.NextGen.Data.Entities.Block", "Block")
                        .WithMany("ProjectBlocks")
                        .HasForeignKey("BlockId")
                        .IsRequired();

                    b.HasOne("WedoIT.NextGen.Data.Entities.Project", "Project")
                        .WithMany("ProjectBlocks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Block");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WedoIT.NextGen.Data.Entities.Block", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("ProjectBlocks");
                });

            modelBuilder.Entity("WedoIT.NextGen.Data.Entities.Person", b =>
                {
                    b.Navigation("Blocks");

                    b.Navigation("Histories");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("WedoIT.NextGen.Data.Entities.Project", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("ProjectBlocks");
                });
#pragma warning restore 612, 618
        }
    }
}
